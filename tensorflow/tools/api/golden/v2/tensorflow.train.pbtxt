path: "tensorflow.train"
tf_module {
  member {
    name: "AdadeltaOptimizer"
    mtype: "<type \'type\'>"
  }
  member {
    name: "AdagradDAOptimizer"
    mtype: "<type \'type\'>"
  }
  member {
    name: "AdagradOptimizer"
    mtype: "<type \'type\'>"
  }
  member {
    name: "AdamOptimizer"
    mtype: "<type \'type\'>"
  }
  member {
    name: "BytesList"
    mtype: "<class \'google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType\'>"
  }
  member {
    name: "Checkpoint"
    mtype: "<type \'type\'>"
  }
  member {
    name: "CheckpointSaverHook"
    mtype: "<type \'type\'>"
  }
  member {
    name: "CheckpointSaverListener"
    mtype: "<type \'type\'>"
  }
  member {
    name: "ChiefSessionCreator"
    mtype: "<type \'type\'>"
  }
  member {
    name: "ClusterDef"
    mtype: "<class \'google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType\'>"
  }
  member {
    name: "ClusterSpec"
    mtype: "<type \'type\'>"
  }
  member {
    name: "Coordinator"
    mtype: "<type \'type\'>"
  }
  member {
    name: "Example"
    mtype: "<class \'google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType\'>"
  }
  member {
    name: "ExponentialMovingAverage"
    mtype: "<type \'type\'>"
  }
  member {
    name: "Feature"
    mtype: "<class \'google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType\'>"
  }
  member {
    name: "FeatureList"
    mtype: "<class \'google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType\'>"
  }
  member {
    name: "FeatureLists"
    mtype: "<class \'google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType\'>"
  }
  member {
    name: "Features"
    mtype: "<class \'google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType\'>"
  }
  member {
    name: "FeedFnHook"
    mtype: "<type \'type\'>"
  }
  member {
    name: "FinalOpsHook"
    mtype: "<type \'type\'>"
  }
  member {
    name: "FloatList"
    mtype: "<class \'google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType\'>"
  }
  member {
    name: "FtrlOptimizer"
    mtype: "<type \'type\'>"
  }
  member {
    name: "GlobalStepWaiterHook"
    mtype: "<type \'type\'>"
  }
  member {
    name: "GradientDescentOptimizer"
    mtype: "<type \'type\'>"
  }
  member {
    name: "Int64List"
    mtype: "<class \'google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType\'>"
  }
  member {
    name: "JobDef"
    mtype: "<class \'google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType\'>"
  }
  member {
    name: "SequenceExample"
    mtype: "<class \'google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType\'>"
  }
  member {
    name: "Server"
    mtype: "<type \'type\'>"
  }
  member {
    name: "ServerDef"
    mtype: "<class \'google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType\'>"
  }
  member {
    name: "experimental"
    mtype: "<type \'module\'>"
  }
  member_method {
    name: "export_meta_graph"
    argspec: "args=[\'filename\', \'meta_info_def\', \'graph_def\', \'saver_def\', \'collection_list\', \'as_text\', \'graph\', \'export_scope\', \'clear_devices\', \'clear_extraneous_savers\', \'strip_default_attrs\'], varargs=None, keywords=kwargs, defaults=[\'None\', \'None\', \'None\', \'None\', \'None\', \'False\', \'None\', \'None\', \'False\', \'False\', \'False\'], "
  }
  member_method {
    name: "generate_checkpoint_state_proto"
    argspec: "args=[\'save_dir\', \'model_checkpoint_path\', \'all_model_checkpoint_paths\', \'all_model_checkpoint_timestamps\', \'last_preserved_timestamp\'], varargs=None, keywords=None, defaults=[\'None\', \'None\', \'None\'], "
  }
  member_method {
    name: "get_checkpoint_mtimes"
    argspec: "args=[\'checkpoint_prefixes\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_checkpoint_state"
    argspec: "args=[\'checkpoint_dir\', \'latest_filename\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "latest_checkpoint"
    argspec: "args=[\'checkpoint_dir\', \'latest_filename\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "list_variables"
    argspec: "args=[\'ckpt_dir_or_file\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "load_checkpoint"
    argspec: "args=[\'ckpt_dir_or_file\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "load_variable"
    argspec: "args=[\'ckpt_dir_or_file\', \'name\'], varargs=None, keywords=None, defaults=None"
  }
}
